in vec3 position;
in vec3 normal;

uniform mat4 projection;
uniform mat4 local_to_world;
uniform mat4 world_to_camera;

out vec3 vs_normal;

void main() 
{
	// compute the normal
	vec3 n = normal;

  vec4 tmp_n = vec4(n, 0.0);
  tmp_n = local_to_world * tmp_n;
	vs_normal = tmp_n.xyz;

	// compute the position
	vec3 p = position;

  vec4 tmp_p = vec4(p, 1.0);
  tmp_p = local_to_world  * tmp_p;
  tmp_p = world_to_camera * tmp_p;
  tmp_p = projection      * tmp_p;

  gl_Position = tmp_p;
}