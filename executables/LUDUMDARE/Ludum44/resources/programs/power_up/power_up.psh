
out vec4 output_color; // "output_color" replaces "gl_FragColor" because glBindFragDataLocation(...) has been called



in vec2 vs_position;
in vec4 vs_color;

in vec3 vs_texcoord0;
in vec3 vs_texcoord1;
in vec2 vs_texcoord2;

uniform vec4 mycolor1;
uniform vec4 mycolor2;


uniform float game_time;
uniform float main_time;
uniform float scroll_speed;

uniform sampler2D powerup_texture;
uniform sampler2DArray material;

void main()
{

	// get the zone color (BLUE or RED)
	vec3 zone_texcoord;
	zone_texcoord.xy = 0.5 * (vs_texcoord0.xy + vs_texcoord1.xy);
	zone_texcoord.z = vs_texcoord0.z;

	vec4 zone_color = texture(material, zone_texcoord);


	float direction = -((zone_color.b * 2.0) - 1.0);

	// get the chevron-patterned
	vec2 chevron_texcoord = vs_texcoord2;
	chevron_texcoord.y *= direction;
	chevron_texcoord.y -= direction * scroll_speed * game_time;

	vec4 chevron_color = texture(powerup_texture, chevron_texcoord);




	vec4 tt = mix(mycolor1, mycolor2, chevron_color.g); // tt.a

	output_color = vec4(zone_color.r, zone_color.g, zone_color.b, 1.0) * vec4(1.0, 1.0, 1.0, tt.a);


	//output_color = chevron_color;


}

#if 0

out vec4 output_color; // "output_color" replaces "gl_FragColor" because glBindFragDataLocation(...) has been called

in vec2 vs_position;
in vec3 vs_texcoord;
in vec4 vs_color;

uniform vec2 viewport_size;
uniform vec2 window_size;
uniform vec4 camera_box;
uniform float game_time;
uniform float main_time;
uniform float scroll_speed;

uniform vec4 mycolor1;
uniform vec4 mycolor2;

uniform sampler2D powerup_texture;
uniform sampler2DArray material;



#if 0

ccc

#endif

void main()
{
	vec4 c2 = texture(material, vs_texcoord); // blue to buy, red to sell

	float direction = (c2.b > 0.5) ? -1.0 : 1.0;

	vec2 texcoord = 10.0 * (gl_FragCoord.xy - ((window_size.xy - viewport_size.xy) * vec2(0.5, 0.5))) / viewport_size.xy;
	texcoord.y *= viewport_size.y / viewport_size.x;

	texcoord.y -= direction * scroll_speed * game_time;

	texcoord += vec2(1.0, 0.0) * camera_box.xy / viewport_size.xy;

	vec4 c1 = texture(powerup_texture, texcoord);	// chevrons
	vec4 tt = mix(mycolor1, mycolor2, c1.g); // tt.a

	output_color = vec4(c2.r, c2.g, c2.b, 1.0) * vec4(1.0, 1.0, 1.0, tt.a);


};

#endif