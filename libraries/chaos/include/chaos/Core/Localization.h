#ifdef CHAOS_FORWARD_DECLARATION

// turn any byte hexadecimal representation into upper case
#define CHAOS_PP_BYTE_TOUPPER(x) CHAOS_PP_BYTE_TOUPPER(x)
#define CHAOS_PP_BYTE_TOUPPER_IMPL(x) BOOST_PP_CAT(CHAOS_PP_BYTE_TOUPPER_IMPL_,x)
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0 00
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1 01
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2 02
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3 03
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4 04
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5 05
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6 06
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7 07
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8 08
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9 09
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A 0A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a 0A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B 0B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b 0B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C 0C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c 0C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D 0D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d 0D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E 0E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e 0E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F 0F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f 0F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_00 00
#define CHAOS_PP_BYTE_TOUPPER_IMPL_01 01
#define CHAOS_PP_BYTE_TOUPPER_IMPL_02 02
#define CHAOS_PP_BYTE_TOUPPER_IMPL_03 03
#define CHAOS_PP_BYTE_TOUPPER_IMPL_04 04
#define CHAOS_PP_BYTE_TOUPPER_IMPL_05 05
#define CHAOS_PP_BYTE_TOUPPER_IMPL_06 06
#define CHAOS_PP_BYTE_TOUPPER_IMPL_07 07
#define CHAOS_PP_BYTE_TOUPPER_IMPL_08 08
#define CHAOS_PP_BYTE_TOUPPER_IMPL_09 09
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0A 0A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0a 0A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0B 0B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0b 0B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0C 0C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0c 0C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0D 0D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0d 0D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0E 0E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0e 0E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0F 0F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_0f 0F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_10 10
#define CHAOS_PP_BYTE_TOUPPER_IMPL_11 11
#define CHAOS_PP_BYTE_TOUPPER_IMPL_12 12
#define CHAOS_PP_BYTE_TOUPPER_IMPL_13 13
#define CHAOS_PP_BYTE_TOUPPER_IMPL_14 14
#define CHAOS_PP_BYTE_TOUPPER_IMPL_15 15
#define CHAOS_PP_BYTE_TOUPPER_IMPL_16 16
#define CHAOS_PP_BYTE_TOUPPER_IMPL_17 17
#define CHAOS_PP_BYTE_TOUPPER_IMPL_18 18
#define CHAOS_PP_BYTE_TOUPPER_IMPL_19 19
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1A 1A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1a 1A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1B 1B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1b 1B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1C 1C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1c 1C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1D 1D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1d 1D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1E 1E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1e 1E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1F 1F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_1f 1F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_20 20
#define CHAOS_PP_BYTE_TOUPPER_IMPL_21 21
#define CHAOS_PP_BYTE_TOUPPER_IMPL_22 22
#define CHAOS_PP_BYTE_TOUPPER_IMPL_23 23
#define CHAOS_PP_BYTE_TOUPPER_IMPL_24 24
#define CHAOS_PP_BYTE_TOUPPER_IMPL_25 25
#define CHAOS_PP_BYTE_TOUPPER_IMPL_26 26
#define CHAOS_PP_BYTE_TOUPPER_IMPL_27 27
#define CHAOS_PP_BYTE_TOUPPER_IMPL_28 28
#define CHAOS_PP_BYTE_TOUPPER_IMPL_29 29
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2A 2A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2a 2A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2B 2B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2b 2B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2C 2C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2c 2C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2D 2D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2d 2D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2E 2E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2e 2E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2F 2F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_2f 2F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_30 30
#define CHAOS_PP_BYTE_TOUPPER_IMPL_31 31
#define CHAOS_PP_BYTE_TOUPPER_IMPL_32 32
#define CHAOS_PP_BYTE_TOUPPER_IMPL_33 33
#define CHAOS_PP_BYTE_TOUPPER_IMPL_34 34
#define CHAOS_PP_BYTE_TOUPPER_IMPL_35 35
#define CHAOS_PP_BYTE_TOUPPER_IMPL_36 36
#define CHAOS_PP_BYTE_TOUPPER_IMPL_37 37
#define CHAOS_PP_BYTE_TOUPPER_IMPL_38 38
#define CHAOS_PP_BYTE_TOUPPER_IMPL_39 39
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3A 3A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3a 3A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3B 3B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3b 3B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3C 3C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3c 3C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3D 3D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3d 3D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3E 3E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3e 3E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3F 3F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_3f 3F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_40 40
#define CHAOS_PP_BYTE_TOUPPER_IMPL_41 41
#define CHAOS_PP_BYTE_TOUPPER_IMPL_42 42
#define CHAOS_PP_BYTE_TOUPPER_IMPL_43 43
#define CHAOS_PP_BYTE_TOUPPER_IMPL_44 44
#define CHAOS_PP_BYTE_TOUPPER_IMPL_45 45
#define CHAOS_PP_BYTE_TOUPPER_IMPL_46 46
#define CHAOS_PP_BYTE_TOUPPER_IMPL_47 47
#define CHAOS_PP_BYTE_TOUPPER_IMPL_48 48
#define CHAOS_PP_BYTE_TOUPPER_IMPL_49 49
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4A 4A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4a 4A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4B 4B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4b 4B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4C 4C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4c 4C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4D 4D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4d 4D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4E 4E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4e 4E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4F 4F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_4f 4F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_50 50
#define CHAOS_PP_BYTE_TOUPPER_IMPL_51 51
#define CHAOS_PP_BYTE_TOUPPER_IMPL_52 52
#define CHAOS_PP_BYTE_TOUPPER_IMPL_53 53
#define CHAOS_PP_BYTE_TOUPPER_IMPL_54 54
#define CHAOS_PP_BYTE_TOUPPER_IMPL_55 55
#define CHAOS_PP_BYTE_TOUPPER_IMPL_56 56
#define CHAOS_PP_BYTE_TOUPPER_IMPL_57 57
#define CHAOS_PP_BYTE_TOUPPER_IMPL_58 58
#define CHAOS_PP_BYTE_TOUPPER_IMPL_59 59
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5A 5A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5a 5A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5B 5B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5b 5B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5C 5C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5c 5C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5D 5D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5d 5D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5E 5E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5e 5E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5F 5F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_5f 5F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_60 60
#define CHAOS_PP_BYTE_TOUPPER_IMPL_61 61
#define CHAOS_PP_BYTE_TOUPPER_IMPL_62 62
#define CHAOS_PP_BYTE_TOUPPER_IMPL_63 63
#define CHAOS_PP_BYTE_TOUPPER_IMPL_64 64
#define CHAOS_PP_BYTE_TOUPPER_IMPL_65 65
#define CHAOS_PP_BYTE_TOUPPER_IMPL_66 66
#define CHAOS_PP_BYTE_TOUPPER_IMPL_67 67
#define CHAOS_PP_BYTE_TOUPPER_IMPL_68 68
#define CHAOS_PP_BYTE_TOUPPER_IMPL_69 69
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6A 6A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6a 6A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6B 6B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6b 6B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6C 6C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6c 6C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6D 6D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6d 6D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6E 6E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6e 6E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6F 6F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_6f 6F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_70 70
#define CHAOS_PP_BYTE_TOUPPER_IMPL_71 71
#define CHAOS_PP_BYTE_TOUPPER_IMPL_72 72
#define CHAOS_PP_BYTE_TOUPPER_IMPL_73 73
#define CHAOS_PP_BYTE_TOUPPER_IMPL_74 74
#define CHAOS_PP_BYTE_TOUPPER_IMPL_75 75
#define CHAOS_PP_BYTE_TOUPPER_IMPL_76 76
#define CHAOS_PP_BYTE_TOUPPER_IMPL_77 77
#define CHAOS_PP_BYTE_TOUPPER_IMPL_78 78
#define CHAOS_PP_BYTE_TOUPPER_IMPL_79 79
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7A 7A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7a 7A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7B 7B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7b 7B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7C 7C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7c 7C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7D 7D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7d 7D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7E 7E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7e 7E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7F 7F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_7f 7F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_80 80
#define CHAOS_PP_BYTE_TOUPPER_IMPL_81 81
#define CHAOS_PP_BYTE_TOUPPER_IMPL_82 82
#define CHAOS_PP_BYTE_TOUPPER_IMPL_83 83
#define CHAOS_PP_BYTE_TOUPPER_IMPL_84 84
#define CHAOS_PP_BYTE_TOUPPER_IMPL_85 85
#define CHAOS_PP_BYTE_TOUPPER_IMPL_86 86
#define CHAOS_PP_BYTE_TOUPPER_IMPL_87 87
#define CHAOS_PP_BYTE_TOUPPER_IMPL_88 88
#define CHAOS_PP_BYTE_TOUPPER_IMPL_89 89
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8A 8A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8a 8A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8B 8B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8b 8B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8C 8C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8c 8C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8D 8D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8d 8D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8E 8E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8e 8E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8F 8F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_8f 8F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_90 90
#define CHAOS_PP_BYTE_TOUPPER_IMPL_91 91
#define CHAOS_PP_BYTE_TOUPPER_IMPL_92 92
#define CHAOS_PP_BYTE_TOUPPER_IMPL_93 93
#define CHAOS_PP_BYTE_TOUPPER_IMPL_94 94
#define CHAOS_PP_BYTE_TOUPPER_IMPL_95 95
#define CHAOS_PP_BYTE_TOUPPER_IMPL_96 96
#define CHAOS_PP_BYTE_TOUPPER_IMPL_97 97
#define CHAOS_PP_BYTE_TOUPPER_IMPL_98 98
#define CHAOS_PP_BYTE_TOUPPER_IMPL_99 99
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9A 9A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9a 9A
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9B 9B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9b 9B
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9C 9C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9c 9C
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9D 9D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9d 9D
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9E 9E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9e 9E
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9F 9F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_9f 9F
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A0 A0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a0 A0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A1 A1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a1 A1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A2 A2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a2 A2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A3 A3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a3 A3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A4 A4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a4 A4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A5 A5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a5 A5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A6 A6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a6 A6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A7 A7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a7 A7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A8 A8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a8 A8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_A9 A9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_a9 A9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_AA AA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aa AA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Aa AA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aA AA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_AB AB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ab AB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ab AB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aB AB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_AC AC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ac AC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ac AC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aC AC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_AD AD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ad AD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ad AD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aD AD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_AE AE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ae AE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ae AE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aE AE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_AF AF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_af AF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Af AF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_aF AF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B0 B0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b0 B0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B1 B1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b1 B1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B2 B2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b2 B2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B3 B3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b3 B3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B4 B4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b4 B4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B5 B5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b5 B5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B6 B6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b6 B6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B7 B7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b7 B7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B8 B8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b8 B8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_B9 B9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_b9 B9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_BA BA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ba BA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ba BA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bA BA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_BB BB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bb BB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Bb BB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bB BB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_BC BC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bc BC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Bc BC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bC BC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_BD BD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bd BD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Bd BD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bD BD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_BE BE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_be BE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Be BE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bE BE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_BF BF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bf BF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Bf BF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_bF BF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C0 C0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c0 C0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C1 C1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c1 C1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C2 C2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c2 C2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C3 C3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c3 C3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C4 C4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c4 C4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C5 C5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c5 C5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C6 C6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c6 C6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C7 C7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c7 C7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C8 C8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c8 C8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_C9 C9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_c9 C9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_CA CA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ca CA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ca CA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cA CA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_CB CB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cb CB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Cb CB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cB CB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_CC CC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cc CC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Cc CC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cC CC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_CD CD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cd CD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Cd CD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cD CD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_CE CE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ce CE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ce CE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cE CE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_CF CF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cf CF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Cf CF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_cF CF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D0 D0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d0 D0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D1 D1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d1 D1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D2 D2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d2 D2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D3 D3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d3 D3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D4 D4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d4 D4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D5 D5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d5 D5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D6 D6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d6 D6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D7 D7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d7 D7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D8 D8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d8 D8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_D9 D9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_d9 D9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_DA DA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_da DA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Da DA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dA DA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_DB DB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_db DB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Db DB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dB DB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_DC DC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dc DC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Dc DC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dC DC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_DD DD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dd DD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Dd DD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dD DD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_DE DE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_de DE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_De DE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dE DE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_DF DF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_df DF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Df DF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_dF DF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E0 E0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e0 E0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E1 E1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e1 E1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E2 E2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e2 E2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E3 E3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e3 E3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E4 E4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e4 E4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E5 E5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e5 E5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E6 E6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e6 E6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E7 E7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e7 E7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E8 E8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e8 E8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_E9 E9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_e9 E9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_EA EA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ea EA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ea EA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eA EA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_EB EB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eb EB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Eb EB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eB EB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_EC EC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ec EC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ec EC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eC EC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ED ED
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ed ED
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ed ED
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eD ED
#define CHAOS_PP_BYTE_TOUPPER_IMPL_EE EE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ee EE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ee EE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eE EE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_EF EF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ef EF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ef EF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_eF EF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F0 F0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f0 F0
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F1 F1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f1 F1
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F2 F2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f2 F2
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F3 F3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f3 F3
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F4 F4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f4 F4
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F5 F5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f5 F5
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F6 F6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f6 F6
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F7 F7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f7 F7
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F8 F8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f8 F8
#define CHAOS_PP_BYTE_TOUPPER_IMPL_F9 F9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_f9 F9
#define CHAOS_PP_BYTE_TOUPPER_IMPL_FA FA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fa FA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Fa FA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fA FA
#define CHAOS_PP_BYTE_TOUPPER_IMPL_FB FB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fb FB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Fb FB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fB FB
#define CHAOS_PP_BYTE_TOUPPER_IMPL_FC FC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fc FC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Fc FC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fC FC
#define CHAOS_PP_BYTE_TOUPPER_IMPL_FD FD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fd FD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Fd FD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fD FD
#define CHAOS_PP_BYTE_TOUPPER_IMPL_FE FE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fe FE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Fe FE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fE FE
#define CHAOS_PP_BYTE_TOUPPER_IMPL_FF FF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_ff FF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_Ff FF
#define CHAOS_PP_BYTE_TOUPPER_IMPL_fF FF


#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES(x) CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL(x)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL(x) BOOST_PP_CAT(CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_,x)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_00(FUNC) FUNC(0,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_01(FUNC) FUNC(0,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_02(FUNC) FUNC(0,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_03(FUNC) FUNC(0,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_04(FUNC) FUNC(0,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_05(FUNC) FUNC(0,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_06(FUNC) FUNC(0,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_07(FUNC) FUNC(0,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_08(FUNC) FUNC(0,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_09(FUNC) FUNC(0,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_0A(FUNC) FUNC(0,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_0B(FUNC) FUNC(0,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_0C(FUNC) FUNC(0,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_0D(FUNC) FUNC(0,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_0E(FUNC) FUNC(0,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_0F(FUNC) FUNC(0,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_10(FUNC) FUNC(1,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_11(FUNC) FUNC(1,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_12(FUNC) FUNC(1,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_13(FUNC) FUNC(1,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_14(FUNC) FUNC(1,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_15(FUNC) FUNC(1,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_16(FUNC) FUNC(1,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_17(FUNC) FUNC(1,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_18(FUNC) FUNC(1,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_19(FUNC) FUNC(1,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_1A(FUNC) FUNC(1,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_1B(FUNC) FUNC(1,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_1C(FUNC) FUNC(1,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_1D(FUNC) FUNC(1,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_1E(FUNC) FUNC(1,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_1F(FUNC) FUNC(1,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_20(FUNC) FUNC(2,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_21(FUNC) FUNC(2,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_22(FUNC) FUNC(2,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_23(FUNC) FUNC(2,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_24(FUNC) FUNC(2,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_25(FUNC) FUNC(2,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_26(FUNC) FUNC(2,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_27(FUNC) FUNC(2,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_28(FUNC) FUNC(2,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_29(FUNC) FUNC(2,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_2A(FUNC) FUNC(2,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_2B(FUNC) FUNC(2,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_2C(FUNC) FUNC(2,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_2D(FUNC) FUNC(2,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_2E(FUNC) FUNC(2,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_2F(FUNC) FUNC(2,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_30(FUNC) FUNC(3,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_31(FUNC) FUNC(3,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_32(FUNC) FUNC(3,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_33(FUNC) FUNC(3,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_34(FUNC) FUNC(3,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_35(FUNC) FUNC(3,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_36(FUNC) FUNC(3,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_37(FUNC) FUNC(3,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_38(FUNC) FUNC(3,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_39(FUNC) FUNC(3,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_3A(FUNC) FUNC(3,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_3B(FUNC) FUNC(3,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_3C(FUNC) FUNC(3,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_3D(FUNC) FUNC(3,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_3E(FUNC) FUNC(3,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_3F(FUNC) FUNC(3,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_40(FUNC) FUNC(4,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_41(FUNC) FUNC(4,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_42(FUNC) FUNC(4,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_43(FUNC) FUNC(4,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_44(FUNC) FUNC(4,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_45(FUNC) FUNC(4,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_46(FUNC) FUNC(4,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_47(FUNC) FUNC(4,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_48(FUNC) FUNC(4,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_49(FUNC) FUNC(4,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_4A(FUNC) FUNC(4,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_4B(FUNC) FUNC(4,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_4C(FUNC) FUNC(4,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_4D(FUNC) FUNC(4,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_4E(FUNC) FUNC(4,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_4F(FUNC) FUNC(4,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_50(FUNC) FUNC(5,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_51(FUNC) FUNC(5,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_52(FUNC) FUNC(5,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_53(FUNC) FUNC(5,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_54(FUNC) FUNC(5,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_55(FUNC) FUNC(5,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_56(FUNC) FUNC(5,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_57(FUNC) FUNC(5,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_58(FUNC) FUNC(5,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_59(FUNC) FUNC(5,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_5A(FUNC) FUNC(5,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_5B(FUNC) FUNC(5,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_5C(FUNC) FUNC(5,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_5D(FUNC) FUNC(5,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_5E(FUNC) FUNC(5,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_5F(FUNC) FUNC(5,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_60(FUNC) FUNC(6,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_61(FUNC) FUNC(6,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_62(FUNC) FUNC(6,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_63(FUNC) FUNC(6,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_64(FUNC) FUNC(6,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_65(FUNC) FUNC(6,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_66(FUNC) FUNC(6,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_67(FUNC) FUNC(6,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_68(FUNC) FUNC(6,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_69(FUNC) FUNC(6,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_6A(FUNC) FUNC(6,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_6B(FUNC) FUNC(6,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_6C(FUNC) FUNC(6,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_6D(FUNC) FUNC(6,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_6E(FUNC) FUNC(6,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_6F(FUNC) FUNC(6,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_70(FUNC) FUNC(7,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_71(FUNC) FUNC(7,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_72(FUNC) FUNC(7,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_73(FUNC) FUNC(7,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_74(FUNC) FUNC(7,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_75(FUNC) FUNC(7,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_76(FUNC) FUNC(7,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_77(FUNC) FUNC(7,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_78(FUNC) FUNC(7,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_79(FUNC) FUNC(7,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_7A(FUNC) FUNC(7,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_7B(FUNC) FUNC(7,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_7C(FUNC) FUNC(7,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_7D(FUNC) FUNC(7,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_7E(FUNC) FUNC(7,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_7F(FUNC) FUNC(7,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_80(FUNC) FUNC(8,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_81(FUNC) FUNC(8,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_82(FUNC) FUNC(8,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_83(FUNC) FUNC(8,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_84(FUNC) FUNC(8,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_85(FUNC) FUNC(8,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_86(FUNC) FUNC(8,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_87(FUNC) FUNC(8,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_88(FUNC) FUNC(8,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_89(FUNC) FUNC(8,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_8A(FUNC) FUNC(8,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_8B(FUNC) FUNC(8,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_8C(FUNC) FUNC(8,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_8D(FUNC) FUNC(8,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_8E(FUNC) FUNC(8,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_8F(FUNC) FUNC(8,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_90(FUNC) FUNC(9,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_91(FUNC) FUNC(9,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_92(FUNC) FUNC(9,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_93(FUNC) FUNC(9,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_94(FUNC) FUNC(9,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_95(FUNC) FUNC(9,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_96(FUNC) FUNC(9,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_97(FUNC) FUNC(9,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_98(FUNC) FUNC(9,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_99(FUNC) FUNC(9,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_9A(FUNC) FUNC(9,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_9B(FUNC) FUNC(9,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_9C(FUNC) FUNC(9,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_9D(FUNC) FUNC(9,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_9E(FUNC) FUNC(9,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_9F(FUNC) FUNC(9,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A0(FUNC) FUNC(A,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A1(FUNC) FUNC(A,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A2(FUNC) FUNC(A,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A3(FUNC) FUNC(A,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A4(FUNC) FUNC(A,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A5(FUNC) FUNC(A,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A6(FUNC) FUNC(A,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A7(FUNC) FUNC(A,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A8(FUNC) FUNC(A,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_A9(FUNC) FUNC(A,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_AA(FUNC) FUNC(A,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_AB(FUNC) FUNC(A,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_AC(FUNC) FUNC(A,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_AD(FUNC) FUNC(A,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_AE(FUNC) FUNC(A,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_AF(FUNC) FUNC(A,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B0(FUNC) FUNC(B,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B1(FUNC) FUNC(B,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B2(FUNC) FUNC(B,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B3(FUNC) FUNC(B,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B4(FUNC) FUNC(B,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B5(FUNC) FUNC(B,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B6(FUNC) FUNC(B,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B7(FUNC) FUNC(B,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B8(FUNC) FUNC(B,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_B9(FUNC) FUNC(B,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_BA(FUNC) FUNC(B,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_BB(FUNC) FUNC(B,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_BC(FUNC) FUNC(B,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_BD(FUNC) FUNC(B,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_BE(FUNC) FUNC(B,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_BF(FUNC) FUNC(B,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C0(FUNC) FUNC(C,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C1(FUNC) FUNC(C,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C2(FUNC) FUNC(C,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C3(FUNC) FUNC(C,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C4(FUNC) FUNC(C,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C5(FUNC) FUNC(C,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C6(FUNC) FUNC(C,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C7(FUNC) FUNC(C,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C8(FUNC) FUNC(C,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_C9(FUNC) FUNC(C,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_CA(FUNC) FUNC(C,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_CB(FUNC) FUNC(C,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_CC(FUNC) FUNC(C,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_CD(FUNC) FUNC(C,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_CE(FUNC) FUNC(C,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_CF(FUNC) FUNC(C,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D0(FUNC) FUNC(D,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D1(FUNC) FUNC(D,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D2(FUNC) FUNC(D,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D3(FUNC) FUNC(D,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D4(FUNC) FUNC(D,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D5(FUNC) FUNC(D,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D6(FUNC) FUNC(D,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D7(FUNC) FUNC(D,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D8(FUNC) FUNC(D,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_D9(FUNC) FUNC(D,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_DA(FUNC) FUNC(D,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_DB(FUNC) FUNC(D,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_DC(FUNC) FUNC(D,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_DD(FUNC) FUNC(D,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_DE(FUNC) FUNC(D,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_DF(FUNC) FUNC(D,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E0(FUNC) FUNC(E,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E1(FUNC) FUNC(E,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E2(FUNC) FUNC(E,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E3(FUNC) FUNC(E,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E4(FUNC) FUNC(E,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E5(FUNC) FUNC(E,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E6(FUNC) FUNC(E,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E7(FUNC) FUNC(E,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E8(FUNC) FUNC(E,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_E9(FUNC) FUNC(E,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_EA(FUNC) FUNC(E,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_EB(FUNC) FUNC(E,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_EC(FUNC) FUNC(E,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_ED(FUNC) FUNC(E,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_EE(FUNC) FUNC(E,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_EF(FUNC) FUNC(E,F)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F0(FUNC) FUNC(F,0)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F1(FUNC) FUNC(F,1)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F2(FUNC) FUNC(F,2)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F3(FUNC) FUNC(F,3)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F4(FUNC) FUNC(F,4)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F5(FUNC) FUNC(F,5)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F6(FUNC) FUNC(F,6)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F7(FUNC) FUNC(F,7)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F8(FUNC) FUNC(F,8)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_F9(FUNC) FUNC(F,9)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_FA(FUNC) FUNC(F,A)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_FB(FUNC) FUNC(F,B)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_FC(FUNC) FUNC(F,C)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_FD(FUNC) FUNC(F,D)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_FE(FUNC) FUNC(F,E)
#define CHAOS_PP_SPLIT_BYTE_INTO_NIBBLES_IMPL_FF(FUNC) FUNC(F,F)
















// create a hard coded UTF8 string from any byte
#define CHAOS_PP_BYTE_TO_UTF8(x) CHAOS_PP_BYTE_TO_UTF8_IMPL(x)
#define CHAOS_PP_BYTE_TO_UTF8_IMPL(x) BOOST_PP_CAT(CHAOS_PP_BYTE_TO_UTF8_IMPL_,x)
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_00 "\x00"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_01 "\x01"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_02 "\x02"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_03 "\x03"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_04 "\x04"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_05 "\x05"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_06 "\x06"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_07 "\x07"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_08 "\x08"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_09 "\x09"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_0A "\x0A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_0B "\x0B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_0C "\x0C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_0D "\x0D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_0E "\x0E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_0F "\x0F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_10 "\x10"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_11 "\x11"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_12 "\x12"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_13 "\x13"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_14 "\x14"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_15 "\x15"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_16 "\x16"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_17 "\x17"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_18 "\x18"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_19 "\x19"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_1A "\x1A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_1B "\x1B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_1C "\x1C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_1D "\x1D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_1E "\x1E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_1F "\x1F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_20 "\x20"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_21 "\x21"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_22 "\x22"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_23 "\x23"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_24 "\x24"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_25 "\x25"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_26 "\x26"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_27 "\x27"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_28 "\x28"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_29 "\x29"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_2A "\x2A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_2B "\x2B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_2C "\x2C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_2D "\x2D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_2E "\x2E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_2F "\x2F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_30 "\x30"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_31 "\x31"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_32 "\x32"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_33 "\x33"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_34 "\x34"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_35 "\x35"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_36 "\x36"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_37 "\x37"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_38 "\x38"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_39 "\x39"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_3A "\x3A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_3B "\x3B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_3C "\x3C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_3D "\x3D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_3E "\x3E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_3F "\x3F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_40 "\x40"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_41 "\x41"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_42 "\x42"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_43 "\x43"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_44 "\x44"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_45 "\x45"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_46 "\x46"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_47 "\x47"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_48 "\x48"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_49 "\x49"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_4A "\x4A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_4B "\x4B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_4C "\x4C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_4D "\x4D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_4E "\x4E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_4F "\x4F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_50 "\x50"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_51 "\x51"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_52 "\x52"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_53 "\x53"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_54 "\x54"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_55 "\x55"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_56 "\x56"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_57 "\x57"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_58 "\x58"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_59 "\x59"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_5A "\x5A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_5B "\x5B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_5C "\x5C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_5D "\x5D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_5E "\x5E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_5F "\x5F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_60 "\x60"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_61 "\x61"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_62 "\x62"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_63 "\x63"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_64 "\x64"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_65 "\x65"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_66 "\x66"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_67 "\x67"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_68 "\x68"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_69 "\x69"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_6A "\x6A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_6B "\x6B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_6C "\x6C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_6D "\x6D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_6E "\x6E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_6F "\x6F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_70 "\x70"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_71 "\x71"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_72 "\x72"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_73 "\x73"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_74 "\x74"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_75 "\x75"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_76 "\x76"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_77 "\x77"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_78 "\x78"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_79 "\x79"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_7A "\x7A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_7B "\x7B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_7C "\x7C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_7D "\x7D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_7E "\x7E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_7F "\x7F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_80 "\x80"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_81 "\x81"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_82 "\x82"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_83 "\x83"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_84 "\x84"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_85 "\x85"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_86 "\x86"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_87 "\x87"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_88 "\x88"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_89 "\x89"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_8A "\x8A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_8B "\x8B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_8C "\x8C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_8D "\x8D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_8E "\x8E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_8F "\x8F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_90 "\x90"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_91 "\x91"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_92 "\x92"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_93 "\x93"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_94 "\x94"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_95 "\x95"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_96 "\x96"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_97 "\x97"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_98 "\x98"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_99 "\x99"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_9A "\x9A"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_9B "\x9B"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_9C "\x9C"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_9D "\x9D"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_9E "\x9E"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_9F "\x9F"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A0 "\xA0"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A1 "\xA1"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A2 "\xA2"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A3 "\xA3"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A4 "\xA4"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A5 "\xA5"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A6 "\xA6"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A7 "\xA7"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A8 "\xA8"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_A9 "\xA9"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_AA "\xAA"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_AB "\xAB"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_AC "\xAC"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_AD "\xAD"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_AE "\xAE"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_AF "\xAF"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B0 "\xB0"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B1 "\xB1"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B2 "\xB2"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B3 "\xB3"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B4 "\xB4"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B5 "\xB5"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B6 "\xB6"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B7 "\xB7"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B8 "\xB8"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_B9 "\xB9"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_BA "\xBA"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_BB "\xBB"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_BC "\xBC"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_BD "\xBD"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_BE "\xBE"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_BF "\xBF"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C0 "\xC0"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C1 "\xC1"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C2 "\xC2"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C3 "\xC3"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C4 "\xC4"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C5 "\xC5"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C6 "\xC6"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C7 "\xC7"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C8 "\xC8"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_C9 "\xC9"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_CA "\xCA"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_CB "\xCB"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_CC "\xCC"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_CD "\xCD"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_CE "\xCE"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_CF "\xCF"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D0 "\xD0"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D1 "\xD1"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D2 "\xD2"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D3 "\xD3"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D4 "\xD4"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D5 "\xD5"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D6 "\xD6"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D7 "\xD7"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D8 "\xD8"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_D9 "\xD9"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_DA "\xDA"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_DB "\xDB"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_DC "\xDC"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_DD "\xDD"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_DE "\xDE"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_DF "\xDF"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E0 "\xE0"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E1 "\xE1"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E2 "\xE2"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E3 "\xE3"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E4 "\xE4"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E5 "\xE5"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E6 "\xE6"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E7 "\xE7"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E8 "\xE8"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_E9 "\xE9"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_EA "\xEA"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_EB "\xEB"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_EC "\xEC"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_ED "\xED"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_EE "\xEE"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_EF "\xEF"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F0 "\xF0"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F1 "\xF1"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F2 "\xF2"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F3 "\xF3"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F4 "\xF4"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F5 "\xF5"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F6 "\xF6"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F7 "\xF7"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F8 "\xF8"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_F9 "\xF9"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_FA "\xFA"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_FB "\xFB"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_FC "\xFC"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_FD "\xFD"
#define CHAOS_PP_BYTE_TO_UTF8_IMPL_FE "\xFE"

// check whether a nibble is greater than 7 (strictly)
#define CHAOS_PP_IS_GREATER_THAN_7(x) CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL(x)
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL(x) BOOST_PP_CAT(CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_,x)
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_0 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_1 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_2 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_3 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_4 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_5 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_6 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_7 0
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_8 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_9 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_A 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_B 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_C 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_D 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_E 1
#define CHAOS_PP_IS_NIBBLE_GREATER_THAN_7_IMPL_F 1

// check whether a NIBBLE is non zero
#define CHAOS_PP_IS_NIBBLE_NON_ZERO(x) CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL(x)
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL(x) BOOST_PP_CAT(CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_,x)
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_0 0
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_1 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_2 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_3 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_4 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_5 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_6 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_7 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_8 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_9 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_A 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_B 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_C 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_D 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_E 1
#define CHAOS_PP_IS_NIBBLE_NON_ZERO_IMPL_F 1

// ensure any hexadecimal figure is uppercase
#define CHAOS_PP_NIBLE_TOUPPER(x) CHAOS_PP_NIBLE_TOUPPER_IMPL(x)
#define CHAOS_PP_NIBLE_TOUPPER_IMPL(x) BOOST_PP_CAT(CHAOS_PP_NIBLE_TOUPPER_,x)
#define CHAOS_PP_NIBLE_TOUPPER_0 0
#define CHAOS_PP_NIBLE_TOUPPER_1 1
#define CHAOS_PP_NIBLE_TOUPPER_2 2
#define CHAOS_PP_NIBLE_TOUPPER_3 3
#define CHAOS_PP_NIBLE_TOUPPER_4 4
#define CHAOS_PP_NIBLE_TOUPPER_5 5
#define CHAOS_PP_NIBLE_TOUPPER_6 6
#define CHAOS_PP_NIBLE_TOUPPER_7 7
#define CHAOS_PP_NIBLE_TOUPPER_8 8
#define CHAOS_PP_NIBLE_TOUPPER_9 9
#define CHAOS_PP_NIBLE_TOUPPER_a A
#define CHAOS_PP_NIBLE_TOUPPER_A A
#define CHAOS_PP_NIBLE_TOUPPER_b B
#define CHAOS_PP_NIBLE_TOUPPER_B B
#define CHAOS_PP_NIBLE_TOUPPER_c C
#define CHAOS_PP_NIBLE_TOUPPER_C C
#define CHAOS_PP_NIBLE_TOUPPER_d D
#define CHAOS_PP_NIBLE_TOUPPER_D D
#define CHAOS_PP_NIBLE_TOUPPER_e E
#define CHAOS_PP_NIBLE_TOUPPER_E E
#define CHAOS_PP_NIBLE_TOUPPER_f F
#define CHAOS_PP_NIBLE_TOUPPER_F F

// select a given bit from any nible
#define CHAOS_PP_NIBLE_SELECT_BIT(bit, x) CHAOS_PP_NIBLE_SELECT_BIT_IMPL(bit, x)
#define CHAOS_PP_NIBLE_SELECT_BIT_IMPL(bit, x) CHAOS_PP_CONCAT_4(CHAOS_PP_NIBLE_SELECT_BIT_, bit, _, x)
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0001 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0010 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0011 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0100 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0101 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0110 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_0111 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1001 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1010 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1011 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1100 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1101 1
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1110 0
#define CHAOS_PP_NIBLE_SELECT_BIT_0_1111 1

#define CHAOS_PP_NIBLE_SELECT_BIT_1_0000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0001 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0010 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0011 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0100 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0101 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0110 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_0111 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1001 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1010 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1011 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1100 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1101 0
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1110 1
#define CHAOS_PP_NIBLE_SELECT_BIT_1_1111 1

#define CHAOS_PP_NIBLE_SELECT_BIT_2_0000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0001 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0010 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0011 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0100 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0101 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0110 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_0111 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1001 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1010 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1011 0
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1100 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1101 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1110 1
#define CHAOS_PP_NIBLE_SELECT_BIT_2_1111 1

#define CHAOS_PP_NIBLE_SELECT_BIT_3_0000 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0001 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0010 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0011 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0100 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0101 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0110 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_0111 0
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1000 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1001 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1010 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1011 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1100 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1101 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1110 1
#define CHAOS_PP_NIBLE_SELECT_BIT_3_1111 1

// transform a nible from hexadecimal representation into binary representation
#define CHAOS_PP_NIBLE_HEX_TO_BIN(x) CHAOS_PP_NIBLE_HEX_TO_BIN_IMPL(x)
#define CHAOS_PP_NIBLE_HEX_TO_BIN_IMPL(x) BOOST_PP_CAT(CHAOS_PP_NIBLE_HEX_TO_BIN_,x)
#define CHAOS_PP_NIBLE_HEX_TO_BIN_0 0000
#define CHAOS_PP_NIBLE_HEX_TO_BIN_1 0001
#define CHAOS_PP_NIBLE_HEX_TO_BIN_2 0010
#define CHAOS_PP_NIBLE_HEX_TO_BIN_3 0011
#define CHAOS_PP_NIBLE_HEX_TO_BIN_4 0100
#define CHAOS_PP_NIBLE_HEX_TO_BIN_5 0101
#define CHAOS_PP_NIBLE_HEX_TO_BIN_6 0110
#define CHAOS_PP_NIBLE_HEX_TO_BIN_7 0111
#define CHAOS_PP_NIBLE_HEX_TO_BIN_8 1000
#define CHAOS_PP_NIBLE_HEX_TO_BIN_9 1001
#define CHAOS_PP_NIBLE_HEX_TO_BIN_A 1010
#define CHAOS_PP_NIBLE_HEX_TO_BIN_B 1011
#define CHAOS_PP_NIBLE_HEX_TO_BIN_C 1100
#define CHAOS_PP_NIBLE_HEX_TO_BIN_D 1101
#define CHAOS_PP_NIBLE_HEX_TO_BIN_E 1110
#define CHAOS_PP_NIBLE_HEX_TO_BIN_F 1111

// transform a nible from binary representation into hexadecimal representation
#define CHAOS_PP_NIBLE_BIN_TO_HEX(x) CHAOS_PP_NIBLE_BIN_TO_HEX_IMPL(x)
#define CHAOS_PP_NIBLE_BIN_TO_HEX_IMPL(x) BOOST_PP_CAT(CHAOS_PP_NIBLE_BIN_TO_HEX_,x)
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0000 0
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0001 1
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0010 2
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0011 3
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0100 4
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0101 5
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0110 6
#define CHAOS_PP_NIBLE_BIN_TO_HEX_0111 7
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1000 8
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1001 9
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1010 A
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1011 B
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1100 C
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1101 D
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1110 E
#define CHAOS_PP_NIBLE_BIN_TO_HEX_1111 F

// Convert some UNICODE codepoint into a UTF8 buffer (see https://fr.wikipedia.org/wiki/UTF-8 for more details about encoding)
// 
// use as follow:
//
//    CHAOS_PP_UNICODE_TO_UTF8(a,b,c,d,e,f) 
//    CHAOS_PP_UNICODE_TO_UTF8(b,c,d,e,f)
//    CHAOS_PP_UNICODE_TO_UTF8(c,d,e,f) 
//    CHAOS_PP_UNICODE_TO_UTF8(d,e,f) 
//    CHAOS_PP_UNICODE_TO_UTF8(e,f) 
//    CHAOS_PP_UNICODE_TO_UTF8(f) 
//
//    a,b,c,d,e,f are nibbles to the unicode codepoint
//              you can omit the ones that are useless
//
// CODING TIP:
//   macro using __VA_ARGS__ don't always work as expected.
//   use BOOST_PP_EXPAND to force the expansion
//
#define CHAOS_PP_UNICODE_TO_UTF8(...) BOOST_PP_EXPAND(CHAOS_PP_UNICODE_TO_UTF8_IMPL(__VA_ARGS__))
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL(...) BOOST_PP_EXPAND(BOOST_PP_CAT(CHAOS_PP_UNICODE_TO_UTF8_IMPL_, BOOST_PP_VARIADIC_SIZE(__VA_ARGS__))(__VA_ARGS__))
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL_1(f) CHAOS_PP_UNICODE_TO_UTF8_HELPER(0,0,0,0,0,f)
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL_2(e,f) CHAOS_PP_UNICODE_TO_UTF8_HELPER(0,0,0,0,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL_3(d,e,f) CHAOS_PP_UNICODE_TO_UTF8_HELPER(0,0,0,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL_4(c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_HELPER(0,0,c,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL_5(b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_HELPER(0,b,c,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_IMPL_6(a,b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_HELPER(a,b,c,d,e,f)

#define CHAOS_PP_UNICODE_TO_UTF8_HELPER(a,b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_HELPER_IMPL(CHAOS_PP_NIBLE_TOUPPER(a),CHAOS_PP_NIBLE_TOUPPER(b),CHAOS_PP_NIBLE_TOUPPER(c),CHAOS_PP_NIBLE_TOUPPER(d), CHAOS_PP_NIBLE_TOUPPER(e), CHAOS_PP_NIBLE_TOUPPER(f))

#define CHAOS_PP_UNICODE_TO_UTF8_HELPER_IMPL(a,b,c,d,e,f)\
BOOST_PP_IF(\
	BOOST_PP_OR(CHAOS_PP_IS_NIBBLE_NON_ZERO(a),CHAOS_PP_IS_NIBBLE_NON_ZERO(b)),\
	CHAOS_PP_UNICODE_TO_UTF8_4(a,b,c,d,e,f),\
	BOOST_PP_IF(\
		BOOST_PP_OR(CHAOS_PP_IS_NIBBLE_NON_ZERO(c), CHAOS_PP_IS_GREATER_THAN_7(d)),\
		CHAOS_PP_UNICODE_TO_UTF8_3(a,b,c,d,e,f),\
		BOOST_PP_IF(\
			BOOST_PP_OR(CHAOS_PP_IS_NIBBLE_NON_ZERO(d), CHAOS_PP_IS_GREATER_THAN_7(e)),\
			CHAOS_PP_UNICODE_TO_UTF8_2(a,b,c,d,e,f),\
			CHAOS_PP_UNICODE_TO_UTF8_1(a,b,c,d,e,f)\
		)\
	)\
)

// encode a UNICODE value into a raw UTF8 buffer (for values that requires 4 bytes)
#define CHAOS_PP_UNICODE_TO_UTF8_4(a,b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_4_IMPL(a,b,c,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_4_IMPL(a,b,c,d,e,f)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        1,\
        1,\
        1\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(a)),\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(b)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(b))\
      )\
    )\
  )\
)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(b)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(b))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(c)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(c)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(c)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(c))\
      )\
    )\
  )\
)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(d))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    )\
  )\
)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(f))\
      )\
    )\
  )\
)

// encode a UNICODE value into a raw UTF8 buffer (for values that requires 3 bytes)
#define CHAOS_PP_UNICODE_TO_UTF8_3(a,b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_3_IMPL(a,b,c,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_3_IMPL(a,b,c,d,e,f)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        1,\
        1,\
        0\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(c)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(c)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(c)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(c))\
      )\
    )\
  )\
)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(d))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    )\
  )\
)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(f))\
      )\
    )\
  )\
)

// encode a UNICODE value into a raw UTF8 buffer (for values that requires 2 bytes)
#define CHAOS_PP_UNICODE_TO_UTF8_2(a,b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_2_IMPL(a,b,c,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_2_IMPL(a,b,c,d,e,f)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(d))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(d)),\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    )\
  )\
)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        1,\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(f))\
      )\
    )\
  )\
)

// encode a UNICODE value into a raw UTF8 buffer (for values that requires 1 byte)
#define CHAOS_PP_UNICODE_TO_UTF8_1(a,b,c,d,e,f) CHAOS_PP_UNICODE_TO_UTF8_1_IMPL(a,b,c,d,e,f)
#define CHAOS_PP_UNICODE_TO_UTF8_1_IMPL(a,b,c,d,e,f)\
CHAOS_PP_BYTE_TO_UTF8(\
  BOOST_PP_CAT(\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        0,\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(e)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(e))\
      )\
    ),\
    CHAOS_PP_NIBLE_BIN_TO_HEX(\
      CHAOS_PP_CONCAT_4(\
        CHAOS_PP_NIBLE_SELECT_BIT(3,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(2,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(1,CHAOS_PP_NIBLE_HEX_TO_BIN(f)),\
        CHAOS_PP_NIBLE_SELECT_BIT(0,CHAOS_PP_NIBLE_HEX_TO_BIN(f))\
      )\
    )\
  )\
)

#endif